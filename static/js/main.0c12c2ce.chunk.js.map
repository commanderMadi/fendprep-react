{"version":3,"sources":["components/Form.js","components/App.js","index.js"],"names":["Form","props","onChangeFullName","e","fullName","target","value","setState","onChangeEmail","email","onChangeUserName","userName","onChangePassword","password","onFormSubmit","preventDefault","errors","validateInputs","state","length","fetch","method","body","JSON","stringify","username","headers","then","res","json","jsonData","resolved","catch","err","Error","this","prevState","concat","id","msg","className","map","error","key","onSubmit","aria-label","htmlFor","onChange","type","tabIndex","aria-required","data-err-message","data-err-field","message","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0c12c2ce.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../styles/style.css\";\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fullName: \"\",\n      email: \"\",\n      userName: \"\",\n      password: \"\",\n      errors: [],\n      resolved: \"\"\n    };\n  }\n\n  onChangeFullName = e => {\n    const fullName = e.target.value;\n    this.setState(() => ({ fullName }));\n  };\n\n  onChangeEmail = e => {\n    const email = e.target.value;\n    this.setState(() => ({ email }));\n  };\n\n  onChangeUserName = e => {\n    const userName = e.target.value;\n    this.setState(() => ({ userName }));\n  };\n\n  onChangePassword = e => {\n    const password = e.target.value;\n    this.setState(() => ({ password }));\n  };\n\n  validateInputs() {\n    if (!this.state.email) {\n      const emailEmpty = \"Email cannot be left blank.\";\n      const id = \"email-empty\";\n      this.setState(prevState => ({\n        errors: prevState.errors.concat({ id, msg: emailEmpty })\n      }));\n    }\n\n    if (!this.state.userName) {\n      const userNameEmpty = \"Username cannot be left blank.\";\n      const id = \"username-empty\";\n      this.setState(prevState => ({\n        errors: prevState.errors.concat({ id, msg: userNameEmpty })\n      }));\n    }\n\n    if (!this.state.password) {\n      const passwordEmpty = \"Password cannot be left blank.\";\n      const id = \"password-empty\";\n      this.setState(prevState => ({\n        errors: prevState.errors.concat({ id, msg: passwordEmpty })\n      }));\n    }\n\n    if (this.state.password && this.state.password.length < 8) {\n      const passwordShort = \"Your password must be 8 characters at least.\";\n      const id = \"password-short\";\n      this.setState(prevState => ({\n        errors: prevState.errors.concat({ id, msg: passwordShort })\n      }));\n    }\n    return false;\n  }\n\n  onFormSubmit = e => {\n    e.preventDefault();\n    // clear all (if any) errors on each form submit\n    this.setState(() => ({ errors: [] }));\n\n    this.validateInputs();\n\n    if (this.state.email && this.state.userName && this.state.password.length >= 8) {\n      const api_url =\"https://private-7e7394-udacityfrontendtest.apiary-mock.com/signup\";\n      fetch(api_url, {\n        method: \"POST\",\n        body: JSON.stringify({\n          username: this.state.userName,\n          password: this.state.password\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      })\n        .then(res => res.json())\n        .then(jsonData => this.setState(() => ({ resolved: jsonData })))\n        .catch(err => new Error(\"Something wrong happend\" + err));\n      this.setState(() => ({ errors: [] }));\n    }\n  };\n\n  render() {\n    return (\n      <section className=\"container\">\n        <section className=\"row\">\n          <h2 className=\"signup-title mt-1 ml-2\">Create an Account</h2>\n        </section>\n\n        {this.state.errors.length > 0 && (\n          <section className=\"mt-4 mb-4 row alert alert-danger\">\n            {\" \"}\n            <p className=\"col-md-12\">The following errors have occurred:</p>\n            {this.state.errors.map(error => {\n              return (\n                error && (\n                  <p className=\"col-md-12\" key={error.id}>\n                    {error.msg}\n                  </p>\n                )\n              );\n            })}\n          </section>\n        )}\n        <form\n          className=\"mt-3\"\n          onSubmit={this.onFormSubmit}\n          aria-label=\"Sign Up\"\n          id=\"signup-form\"\n        >\n          <section className=\"form-group\">\n            <label htmlFor=\"fullname\">Full Name (Optional)</label>\n            <input\n              onChange={this.onChangeFullName}\n              type=\"text\"\n              id=\"fullname\"\n              className=\"form-control form-control-lg\"\n              tabIndex=\"1\"\n            />\n          </section>\n\n          <section className=\"form-group\">\n            <label className=\"mandatory\" htmlFor=\"email\">\n              Email\n            </label>\n            <input\n              onChange={this.onChangeEmail}\n              className=\"form-control form-control-lg\"\n              aria-required=\"true\"\n              type=\"email\"\n              id=\"email\"\n              data-err-message=\"Email cannot be left blank\"\n              data-err-field=\"email-empty-error\"\n              tabIndex=\"2\"\n            />\n            <label id=\"email-empty-error\"></label>\n          </section>\n\n          <section className=\"form-group\">\n            <label className=\"mandatory\" htmlFor=\"username\">\n              Username\n            </label>\n            <input\n              onChange={this.onChangeUserName}\n              className=\"form-control form-control-lg\"\n              aria-required=\"true\"\n              type=\"text\"\n              id=\"username\"\n              data-err-message=\"Username cannot be left blank\"\n              data-err-field=\"username-empty-error\"\n              tabIndex=\"3\"\n            />\n            <label id=\"username-empty-error\"></label>\n          </section>\n\n          <section className=\"form-group\">\n            <label className=\"mandatory\" htmlFor=\"password\">\n              Password\n            </label>\n            <input\n              onChange={this.onChangePassword}\n              className=\"form-control form-control-lg\"\n              aria-required=\"true\"\n              type=\"password\"\n              id=\"password\"\n              data-err-message=\"Password cannot be left blank\"\n              data-err-field=\"password-empty-error\"\n              tabIndex=\"4\"\n            />\n            <label id=\"password-empty-error\"></label>\n          </section>\n          <input\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            value=\"Sign Up\"\n            tabIndex=\"5\"\n          />\n        </form>\n        <section className=\"row\">\n          <p className=\"note text-muted mt-2 col-12\">\n            Fields that are marked with * are mandatory fields.\n          </p>\n        </section>\n        {this.state.errors.length === 0 && this.state.resolved.message && (\n          <section className=\"mt-4 row alert alert-danger\">\n            <p className=\"text-center user-creation\">\n              {this.state.resolved.message}\n            </p>\n          </section>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default Form;\n","import React from 'react';\nimport Form from './Form';\n\nconst App = () => {\n    return (\n        <Form />\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}